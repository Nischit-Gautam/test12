(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-f7178c02"],{ab9c:function(t,e,s){},c16b:function(t,e,s){"use strict";s("ab9c")},caaae:function(t,e,s){"use strict";s.r(e);var a=function(){var t=this,e=t._self._c;return t.modal?e("TmfModalRight",t._b({staticClass:"tag-form",attrs:{modal:t.modal},on:{"update:modal":function(e){t.modal=e}},scopedSlots:t._u([{key:"footer-wrapper",fn:function(){return[e("div")]},proxy:!0}],null,!1,2242061672)},"TmfModalRight",{modalData:t.modalData},!1),[t.tagPreview?e("div",{staticClass:"tag-preview mb-2 slideup-animate",attrs:{id:"tag-preview"}},[e("div",{staticClass:"d-flex align-items-center justify-content-between tag-title"},[e("h6",{staticStyle:{overflow:"hidden",width:"240px"}},[t._v("#"+t._s(t.previewTag.name))]),e("span",{domProps:{innerHTML:t._s(t.$internalIcons.plus)},on:{click:function(e){t.tagPreview=!1,t.previewTag={}}}})]),e("div",{staticClass:"d-flex"},[e("div",{staticClass:"tag-actions flex-row align-items-center"},[e("div",{staticClass:"mr-1 d-flex align-items-center justify-content-center",domProps:{innerHTML:t._s(t.$internalIcons.pencil)},on:{click:function(e){return e.stopPropagation(),t.editTag(t.previewTag)}}}),e("div",{staticClass:"d-flex align-items-center justify-content-center",domProps:{innerHTML:t._s(t.$internalIcons.trash)},on:{click:function(e){return e.stopPropagation(),t.deleteTag(t.previewTag)}}})])]),t.previewTag.description?e("div",{staticClass:"tag-description mt-2"},[t._v(" "+t._s(t.previewTag.description)+" ")]):t._e()]):t._e(),e("div",{staticClass:"all-tags-header"},[e("div",{staticClass:"d-flex align-items-center justify-content-between mb-2"},[e("TmfInput",{staticClass:"mb-0 flex-grow-1 tmf-input__only-input",class:t.tagForm?"w-100":"",attrs:{formAttributes:{type:"text",placeholder:"Search Tags",maxlength:"50"},value:t.search},on:{"update:value":function(e){t.search=e}}},[e("span",{staticClass:"clear-input",staticStyle:{transform:"rotate(45deg)"},attrs:{slot:"append"},domProps:{innerHTML:t._s(t.$internalIcons.plus)},on:{click:function(e){t.search=""}},slot:"append"})]),t.tagForm?t._e():e("button",{staticClass:"btn-control md light ml-1",on:{click:t.openForm}},[t._v(" Add Tag ")])],1)]),t.isLoading?e("div",{staticClass:"p-2"},t._l(8,(function(t){return e("div",{key:t,staticClass:"d-flex mb-1 p-1"},[e("div",{staticClass:"skeletion-loader mr-2",style:{width:Math.floor(50*Math.random()+30)+"%",height:"15px","border-radius":"2px"}}),e("div",{staticClass:"skeletion-loader light",staticStyle:{width:"15px",height:"15px","border-radius":"2px"}})])})),0):t.isLoading?t._e():e("div",{staticClass:"flex-grow-1 tags-list__wrapper"},[e("ul",{staticClass:"tags-list scroll-vertical h-100"},[t._l(t.filteredTag,(function(s,a){return[e("li",{key:a,staticClass:"tags-item d-flex flex-row justify-content-between",class:t.selectedTag.tagID===s.tagID||t.previewTag.tagID===s.tagID?"selected-tag":"",on:{click:function(e){return t.selectTag(s)}}},[e("div",{staticClass:"tag-name-wrapper d-flex align-items-center mr-2"},[e("span",{staticClass:"tag-name"},[t._v(" #"+t._s(s.name)+" ")])]),e("div",{staticClass:"tag-name-wrapper d-flex align-items-center"},[!0===s.isPublic?e("span",{staticClass:"lock-icon",staticStyle:{width:"10px",height:"10px"}},[e("span",{domProps:{innerHTML:t._s(t.$internalIcons.lock)}})]):t._e()]),!0===t.user.isAdmin||!1===s.isPublic||!1===s.isGlobal?e("div",{staticClass:"tag-actions flex-row align-items-center"},[e("div",{staticClass:"mr-1 d-flex align-items-center justify-content-center",domProps:{innerHTML:t._s(t.$internalIcons.pencil)},on:{click:function(e){return e.stopPropagation(),t.editTag(s)}}}),e("div",{staticClass:"d-flex align-items-center justify-content-center",domProps:{innerHTML:t._s(t.$internalIcons.trash)},on:{click:function(e){return e.stopPropagation(),t.deleteTag(s)}}})]):t._e()])]})),0===t.filteredTag.length&&!1===t.isLoading?e("li",{staticClass:"message"},[t._v(" No Tags Found ")]):t._e(),""==t.search?e("div",{directives:[{name:"trigger-observer",rawName:"v-trigger-observer"}],attrs:{id:"TagscrollLoader"}},t._l(3,(function(t){return e("div",{key:"tag-"+t,staticClass:"d-flex mb-1 p-1"},[e("div",{staticClass:"skeletion-loader mr-2",style:{width:Math.floor(50*Math.random()+30)+"%",height:"15px","border-radius":"2px"}}),e("div",{staticClass:"skeletion-loader light",staticStyle:{width:"15px",height:"15px","border-radius":"2px"}})])})),0):t._e()],2)]),t.tagForm?e("form",{staticClass:"d-flex flex-column tag-form-container slideup-animate",on:{submit:function(e){return e.preventDefault(),t.submit()}}},[e("div",{staticClass:"d-flex align-items-center justify-content-between tag-form-header mb-2"},[e("h6",[t._v(t._s(t.isEdit?"Edit Tag":"Add Tag"))]),e("span",{domProps:{innerHTML:t._s(t.$internalIcons.plus)},on:{click:function(e){return t.closeTagForm()}}})]),e("TmfInput",{attrs:{formAttributes:{type:"text",label:"Tag Name *",maxlength:"20",name:"name",required:!0,autocomplete:"off",autofill:"off"},formErrors:t.formErrors,value:t.formData.name,focus:"tagFormName"},on:{"update:value":function(e){return t.$set(t.formData,"name",e)}}}),e("TmfTextarea",{attrs:{formAttributes:{rows:"2",label:"Description",maxlength:"150",name:"description",resize:"none"},formErrors:t.formErrors,value:t.formData.description},on:{"update:value":function(e){return t.$set(t.formData,"description",e)}}}),t.user.isAdmin&&!t.isEdit?e("TmfCheckbox",{attrs:{formAttributes:{label:"Create Organization Tag",name:"isPrivate"},value:t.formData.IsPublic},on:{"update:value":function(e){return t.$set(t.formData,"IsPublic",e)}}}):t._e(),e("div",{staticClass:"d-flex justify-content-end"},[e("button",{staticClass:"btn-control md light",attrs:{type:"button",disabled:t.buttonIsLoading},on:{click:function(e){return t.closeTagForm()}}},[t._v(" Close ")]),e("button",{staticClass:"btn-control md primary",attrs:{type:"submit",disabled:t.buttonIsLoading||t.isButtonDisable}},[t.buttonIsLoading?e("div",{staticClass:"loader"}):t._e(),t._v(" Submit ")])])],1):t._e()]):t._e()},i=[],r=s("2f62");function o(){return{modal:!1,isLoading:!1,tagType:["Shared","Private"],formData:{type:"Private"},buttonIsLoading:!1,isEdit:!1,selectedTag:{},tagForm:!1,tagPreview:!1,previewTag:{},search:"",formErrors:{},observer:null,searchedTags:[],debounceTimer:null}}var n={data:()=>o(),directives:{"trigger-observer":{inserted(t,e,s){s.context.initializeInterceptor()}}},computed:{isButtonDisable(){var t;return!(null!==(t=this.formData)&&void 0!==t&&t.name)},...Object(r["b"])(["tags","allTagsCount","user"]),filteredTag(){if(this.tags.length&&""===this.search){let t=this.tags;return t.filter(t=>!t.isDeleted).sort((t,e)=>t-e)}return""!==this.search?this.searchedTags:[]},modalData(){return{title:`Tags (${this.allTagsCount})`,icon:"tags"}}},mounted(){this.$bus.$on("open-tag-modal",()=>{this.initialize()}),this.$bus.$on("close-tag-modal",()=>{Object.assign(this.$data,o())})},methods:{async initialize(){this.modal?this.modal=!1:(Object.assign(this.$data,o()),this.modal=!0,await this.getTags())},async getTags(){try{this.tags.length||(this.isLoading=!0),await this.$store.dispatch("getTags",this.$store.getters.page)}finally{this.isLoading=!1}},async submit(){this.buttonIsLoading=!0,this.mapType(this.formData.type),this.formData.name=this.formData.name.toLowerCase(),this.isEdit?await this.edit():await this.save()},async save(){let t={...this.formData};delete t.type;try{var e=await this.$axios.post("/tag",t);this.$bus.$emit("open-toaster",`<b>Tag Added</b><small><strong>${this.formData.name}</strong> Tag added successfully</small>`,"success"),this.$store.commit("SET_TAGS",this.tags.filter(e=>e.name!=t.name).concat(e.data)),this.$bus.$emit("reset-current-bookmarks"),await this.closeForm()}catch(s){400===s.status&&(this.formErrors=JSON.parse(s.response)["errors"]),409===s.status&&(this.formErrors={name:["Duplicate tag name"]}),this.$bus.$emit("open-toaster",`<b>Error Adding Tag</b><small>${this.formErrors.name}</small>`,"error")}finally{this.buttonIsLoading=!1}},async edit(){try{if(!this.selectedTag)return;let t={...this.formData};delete t.type;let e=await this.$axios.put("/tag/"+this.selectedTag.tagID,t);this.$bus.$emit("open-toaster",`<b>${this.selectedTag.name}</b> tag is updated.`),this.$store.commit("SET_TAGS",this.tags.filter(t=>t.tagID!=this.selectedTag.tagID).concat(e.data)),this.$bus.$emit("reset-current-bookmarks"),this.setInitialdata()}catch(t){400===t.status&&(this.formErrors=JSON.parse(t.response)["errors"]),409===t.status&&(this.formErrors={name:["Duplicate tag name"]}),this.$bus.$emit("open-toaster","Error updating tag")}finally{this.buttonIsLoading=!1}},editTag(t){this.formErrors={},this.tagPreview=!1,this.previewTag={},this.isEdit=!0,this.selectedTag={...t},this.tagForm=!0,this.mapData(t)},async deleteTag(t){this.$bus.$emit("dialog-open",`Do you want to permanently delete <b>${t.name}</b> Tag?<br/><br/> <small>Deleting this tag will remove it from all the links it is attached to.</small>`),this.$bus.$on("dialog-success",e=>{e&&this.deleteTagApi(t),this.$bus.$off("dialog-success")})},async deleteTagApi(t){try{var e;this.$bus.$emit("open-toaster",`Deleting tag <b>${t.name}</b>.`,"loader"),await this.$axios.delete("/tag/"+t.tagID),this.$bus.$emit("open-toaster",`<b>${t.name}</b> tag is deleted successfuly.`,"success"),this.$store.commit("SET_TAGS",null===(e=this.$store.getters)||void 0===e||null===(e=e.tags)||void 0===e?void 0:e.filter(e=>e.tagID!==t.tagID)),this.$bus.$emit("reset-current-bookmarks"),this.setInitialdata()}catch{this.$bus.$emit("open-toaster",`Error Deleting tag <b>${t.name}</b>.`)}},async closeForm(){await this.getTags(),this.setInitialdata()},setInitialdata(){let t=o();t.modal=!0,Object.assign(this.$data,{...t})},selectTag(t){this.isEdit?this.editTag(t):(this.$bus.$emit("search-using-tags",t.name),this.tagPreview=!1,this.$nextTick(()=>{this.tagForm?(this.tagPreview=!1,this.previewTag={}):(this.tagPreview=!0,this.previewTag=t)}))},openForm(){this.formErrors={},this.tagForm=!0,this.isEdit=!1,this.tagPreview=!1,this.previewTag={},this.selectedTag={},this.formData={}},mapType(t){if(t)switch(t){case"Shared":this.formData.IsShared=!0,this.formData.IsPrivate=!1;break;case"Private":this.formData.IsShared=!1,this.formData.IsPrivate=!0;break;default:return}},mapData(t){this.formData={name:t.name,description:t.description}},closeTagForm(){this.isEdit=!1,this.tagForm=!1,this.selectedTag={}},async searchTagsDebounced(){clearTimeout(this.debounceTimer),this.debounceTimer=setTimeout(()=>{this.fetchSearchedTags()},1e3)},async fetchSearchedTags(){try{const t=await this.$axios.get("Tag/search?searchKey="+this.search);this.searchedTags=t.data}catch(t){console.error("Error fetching filtered tags:",t),this.searchedTags=[]}finally{this.isLoading=!1}},initializeInterceptor(){let t={threshold:.5},e=t=>{t.forEach(t=>{t.isIntersecting&&this.getAdditionalTags()})};this.observer=new IntersectionObserver(e,t);let s=document.querySelector("#TagscrollLoader");s&&this.observer.observe(s)},disconnectObserver(){this.observer&&this.observer.disconnect()},async getAdditionalTags(){var t=await this.$store.dispatch("getTags",this.$store.getters.page);t.length<30&&(document.querySelector("#TagscrollLoader").style.display="none")}},beforeDestroy(){this.$bus.$off("open-tag-modal"),this.$bus.$off("close-tag-modal"),this.disconnectObserver()},watch:{"formData.type":{immediate:!0,handler(t){this.mapType(t)}},search:{immediate:!0,handler(t){""!==t&&(this.isLoading=!0,this.searchTagsDebounced())}}}},l=n,c=(s("c16b"),s("2877")),d=Object(c["a"])(l,a,i,!1,null,null,null);e["default"]=d.exports}}]);