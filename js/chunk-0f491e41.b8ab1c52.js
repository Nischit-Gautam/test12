(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-0f491e41"],{"12ad":function(e,t,o){"use strict";o("14d9");var i=o("2f62");t["a"]={computed:{...Object(i["b"])(["settings","extensionId"])},methods:{async pinCollection({collection:e,componentData:t}){let o={...e,isPinned:!e.isPinned};try{this.$bus.$emit("open-toaster",`${o.isPinned?"pinning":"unpinning"} collection <strong>${e.name}</strong>`,"loader"),this.$store.commit("SET_LOADING_COLLECTIONS",{payload:e.id,type:"add"}),await this.$axios.put("/category/"+e.id,o),this.$collectionHelper.mapCollection({collection:o,componentData:t,type:"update"}),this.$store.commit("SET_LOADING_COLLECTIONS",{payload:e.id,type:"remove"}),this.$bus.$emit("open-toaster",`Collection <strong>${e.name}</strong> is ${o.isPinned?"pinned":"unpinned"}`,"success")}catch{this.$bus.$emit("open-toaster",`Error ${o.isPinned?"pinning":"unpinning"} collection <strong>${e.name}</strong>`,"error")}},editCollection({collection:e,componentData:t}){this.$bus.$emit("open-collection-form",{collection:e,componentData:t,isEditCollection:!0})},addChildCollection({collection:e,componentData:t}){this.$bus.$emit("open-collection-form",{collection:e,componentData:t,isAddChildCollection:!0})},async trashCollection({collection:e,componentData:t}){var o,i,l;if(this.$bus.$emit("open-toaster","Checking collection","loader"),await this.$store.dispatch("getSettings"),this.$bus.$emit("open-toaster"),null!==(o=[null===(i=this.settings)||void 0===i?void 0:i.defaultChromeCategory,null===(l=this.settings)||void 0===l?void 0:l.defaultBrowserSession])&&void 0!==o&&o.includes(null===e||void 0===e?void 0:e.id)){var n;let t=(null===(n=this.settings)||void 0===n?void 0:n.defaultChromeCategory)===(null===e||void 0===e?void 0:e.id)?"Default Collection":"Extension Default Collection";this.$bus.$emit("dialog-open",`<b>${e.name}</b> is set as a <b style="color: red">${t}</b> in settings. <br/> Change the ${t} to remove it.\n        `,"ok")}else null===e.parentID?this.$bus.$emit("dialog-open",`Do you want to remove <b>${e.name}</b> Collection ?`):this.$bus.$emit("dialog-open",`Do you want to remove <b>${e.name}</b> Collection <strong style="color: red"> permanently</strong>?`),this.$bus.$on("dialog-success",o=>{o&&this.trashCollectionApi({collection:e,componentData:t}),this.$bus.$off("dialog-success")})},async trashCollectionApi({collection:e,componentData:t}){try{this.$bus.$emit("open-toaster",`Moving collection <strong>${e.name}</strong> to trash.`,"loader"),e.isDeleted=!0;let o={};await this.$axios.put("/category/"+e.id,e).then(async e=>{o=e,await this.$store.dispatch("getDeletedCollection")}),this.$collectionHelper.ifSelectedCollectionIsChildOfDeletedCollection({collection:e})&&this.$router.push(`${this.$route.matched[0].path}/trashed/${e.id}`),this.$collectionHelper.mapCollection({collection:o.data,componentData:t,type:"trash"}),this.$bus.$emit("open-toaster",`<b>${e.name}</b> collection is moved to trash.`,"success"),this.$route.params.collectionId==e.id&&(this.$store.commit("SET_SELECTED_COLLECTION",{...o.data}),this.$router.push(`${this.$route.matched[0].path}/trashed/${e.id}`))}catch(o){this.$bus.$emit("open-toaster",`Error moving <b>${e.name}</b> collection to trash.`,"error")}},async restoreCollection({collection:e,componentData:t}){this.$bus.$emit("dialog-open",`Do you want to restore <b>${e.name}</b> Collection ?`),this.$bus.$on("dialog-success",o=>{o&&this.restoreCollectionApi({collection:e,componentData:t}),this.$bus.$off("dialog-success")})},async restoreCollectionApi({collection:e}){try{var t;this.$bus.$emit("open-toaster",`Restoring collection <strong>${e.name}</strong> from trash.`,"loader"),e.isDeleted=!1;let i={},l=null;await this.$axios.put("/category/"+e.id,e).then(async e=>{var t;i=e,l=(null===(t=e.data)||void 0===t||null===(t=t.sharedTeams)||void 0===t||null===(t=t.filter(e=>null!==e.shareWithID))||void 0===t||null===(t=t[0])||void 0===t||null===(t=t.sharedTeams)||void 0===t?void 0:t.shareWithID)||null,await this.$store.dispatch("getDeletedCollection")});let n=this.$collectionHelper.getNavItemComponentData(i.data);var o;if(null===(null===(t=i.data)||void 0===t?void 0:t.parentID))this.$collectionHelper.mapCollection({collection:i.data,componentData:n,type:"addNewCollection"});else await this.$axios.get("/category/"+(null===(o=i.data)||void 0===o?void 0:o.parentID)).then(async e=>{await this.$collectionHelper.mapCollection({collection:e.data,componentData:n,type:"addChildCollection",childCollections:i.data})});if(this.$bus.$emit("open-toaster",`<b>${e.name}</b> collection is restored from trash.`,"success"),this.$route.params.collectionId==e.id){this.$store.commit("SET_SELECTED_COLLECTION",{...i.data});let t=""+this.$route.matched[0].path,o=(null===n||void 0===n?void 0:n.route)||"",s=`${t}/${o}${l?l+"/":""}${e.id}`;this.$router.push(s)}}catch(i){this.$bus.$emit("open-toaster",`Error  restoring <b>${e.name}</b> collection from trash.`,"error")}},async deleteCollection({collection:e,componentData:t}){this.$bus.$emit("dialog-open",`Do you want to permanently delete <b>${e.name}</b> Collection ? <br>\n        <small class="mt-2 d-block">Note: Deleting this collection will delete all the links inside this collection.</small>\n        `),this.$bus.$on("dialog-success",o=>{o&&this.deleteCollectionApi({collection:e,componentData:t}),this.$bus.$off("dialog-success")})},async deleteCollectionApi({collection:e}){try{this.$bus.$emit("open-toaster",`Removing collection <strong>${e.name}</strong>..`,"loader"),await this.$axios.delete("/category/"+e.id).then(async()=>{await this.$store.dispatch("getDeletedCollection")}),this.$bus.$emit("open-toaster",`<strong>${e.name}</strong> collection deleted.`,"success"),this.$route.params.collectionId==e.id&&this.$router.push(this.$route.matched[0].path+"/all")}catch(t){this.$bus.$emit("open-toaster",`Error removing collection <strong>${e.name}</strong>`,"error")}},async restoreLinksToTabs({collection:e,type:t="current"}){if(!this.extensionId)return;let o=`/Bookmark/${e.id}/getBookmarks${e.sharedTeams.length>0&&e.sharedTeams.some(e=>e.isPublic)?"?isPublic=true":e.sharedTeams.length>0&&e.sharedTeams.some(e=>e.isSharedWithTeams)?"?isShared=true":""}`,i=await this.$axios.get(o),l=[];i.data.forEach(e=>{l.push(e.path)}),"private"===t?l.forEach(e=>{window.chrome.windows.create({url:e,incognito:!0})}):l.forEach(e=>{window.chrome.tabs.create({url:e,active:!0})})},async importFromFile({collection:e,componentData:t}){this.$bus.$emit("open-collection-form",{collection:e,componentData:t,isUploadFile:!0})}}}},"369b":function(e,t,o){"use strict";o.r(t);var i=function(){var e=this,t=e._self._c;return t("div",{staticClass:"d-flex align-items-center justify-content-between flex-wrap bookmark-header"},[t("div",{staticClass:"d-flex align-items-center flex-grow-1 bookmark-header--title"},[t("span",{directives:[{name:"show",rawName:"v-show",value:!e.hideMultiselect&&e.count,expression:"!hideMultiselect && count"}]},[t("input",{directives:[{name:"model",rawName:"v-model",value:e.selectAllBookmark,expression:"selectAllBookmark"}],ref:"selectAllBookmarkInput",staticClass:"bookmark-header--title-input",attrs:{type:"checkbox"},domProps:{checked:Array.isArray(e.selectAllBookmark)?e._i(e.selectAllBookmark,null)>-1:e.selectAllBookmark},on:{change:function(t){var o=e.selectAllBookmark,i=t.target,l=!!i.checked;if(Array.isArray(o)){var n=null,s=e._i(o,n);i.checked?s<0&&(e.selectAllBookmark=o.concat([n])):s>-1&&(e.selectAllBookmark=o.slice(0,s).concat(o.slice(s+1)))}else e.selectAllBookmark=l}}})]),e.componentData&&"title"in e.componentData?t("h6",{staticClass:"mb-0 ml-2 text-color-dark"},[e._v(" # "+e._s(e.componentData.title)+" "),e.count?t("small",[e._v("( "+e._s(e.allBookmarkCount||e.count)+" )")]):e._e()]):e._e()]),t("div",{staticClass:"d-flex align-items-center justify-content-between ml-2 bookmark-header--buttons",class:e.showEmailLinkButton?"outlook-link-buttons":""},[e.showEmailLinkButton&&!e.searchBookmarkMode?t("div",{staticClass:"view-email d-flex align-items-center mr-2",class:e.showOutlookEmailLinks?"view-email--active":"",on:{click:e.toggleEmailLinks}},[e._v(" Email Links "),t("span",{staticClass:"d-inline-flex align-items-center ml-2",style:{transform:e.showOutlookEmailLinks?"rotate(180deg)":""},domProps:{innerHTML:e._s(e.$internalIcons.down)}})]):e._e(),e.componentData&&"hideAddLink"in e.componentData||!e.showAddLink?e._e():t("button",{staticClass:"btn-control primary md",on:{click:function(t){return e.$bus.$emit("open-bookmark-form",{withCollectionId:e.withNoSelectCollection?e.selectedCollection.id:e.$route.params.collectionId,withNoSelectCollection:e.withNoSelectCollection,selectedCollection:e.selectedCollection})}}},[t("div",{staticClass:"plus-icon-container",domProps:{innerHTML:e._s(e.$internalIcons.plusWeighted)}})]),e.componentData&&"restoreCollection"in e.componentData&&!e.selectedCollection.parentID?t("button",{staticClass:"btn-control md light",on:{click:function(t){e.restoreCollection({collection:e.selectedCollection,componentData:e.$collectionHelper.getNavItemComponentData(e.selectedCollection)})}}},[t("span",{domProps:{innerHTML:e._s(e.$internalIcons.restore)}}),e._v(" Restore Collection ")]):e._e()])])},l=[],n=o("2f62"),s=o("12ad"),a={props:{componentData:{type:Object,required:!0},searchBookmarkMode:{type:Boolean,required:!1,default:!1},count:{type:Number,required:!1,default:0},allBookmarkCount:{type:Number,required:!1},withNoSelectCollection:{type:Boolean,required:!1,default:!1}},mixins:[s["a"]],data(){return{showOutlookEmailLinks:!1,selectAllBookmark:!1}},computed:{...Object(n["b"])(["selectedCollection","bookmarkViewType","user"]),showEmailLinkButton(){return"OutlookRead"===this.$route.matched[0].name},hideMultiselect(){var e;return!(null===(e=this.componentData)||void 0===e||!e.hideMultiselect)},showAddLink(){return this.$permissionHelper.checkPermission({permissionName:"bookmarkAdd",collection:this.selectedCollection})}},mounted(){this.$bus.$on("reset-selected-bookmarks",()=>{this.selectAllBookmark=!1})},methods:{toggleEmailLinks(){this.showOutlookEmailLinks=!this.showOutlookEmailLinks,this.$emit("changeEmailHandler",this.showOutlookEmailLinks)},changeSelectAllInputValue(e){"indeterminate"in e&&(this.$refs.selectAllBookmarkInput.indeterminate=e.indeterminate),"checked"in e&&(this.$refs.selectAllBookmarkInput.checked=e.checked)},changeBookmarkView(e){this.$store.commit("SET_ALL_BOOKMARK_VIEW_TYPE",e)}},watch:{selectAllBookmark(e){this.$emit("selectBookmarksHandler",e)}}},c=a,r=(o("4190"),o("2877")),d=Object(r["a"])(c,i,l,!1,null,null,null);t["default"]=d.exports},4190:function(e,t,o){"use strict";o("6085")},6085:function(e,t,o){}}]);