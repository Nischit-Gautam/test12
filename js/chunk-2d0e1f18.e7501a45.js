(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e1f18"],{"7d1f":function(t,o,i){"use strict";i.r(o);var e=function(){var t=this,o=t._self._c;return t.modal?o("ModalContainer",t._b({staticClass:"collection-form",attrs:{modal:t.modal},on:{"update:modal":function(o){t.modal=o},update:function(o){t.formData={}},submit:t.submit}},"ModalContainer",{modalData:t.modalData,isButtonDisable:t.isButtonDisable,isButtonLoading:t.isButtonLoading},!1),[o("form",{staticClass:"input-form d-flex flex-column w-100",attrs:{slot:"body"},on:{submit:function(o){return o.preventDefault(),t.submit()}},slot:"body"},[o("div",{staticClass:"d-flex align-items-center",staticStyle:{position:"realtive"}},[o("TmfIcons",{attrs:{currentIcon:t.selectedIcon},on:{"update:currentIcon":function(o){t.selectedIcon=o},"update:current-icon":function(o){t.selectedIcon=o}}}),o("TmfInput",{staticClass:"flex-grow-1",attrs:{formAttributes:{type:"text",label:"Collection Name *",maxlength:"60",name:"Name",required:!0,autocomplete:"off",autofill:"off"},formErrors:t.formErrors,value:t.formData.name,focus:"collectionFormCollectionName"},on:{"update:value":function(o){return t.$set(t.formData,"name",o)}}})],1),o("TmfTextarea",{attrs:{formAttributes:{rows:"3",label:"Description",maxlength:"100",name:"Description"},formErrors:t.formErrors,value:t.formData.description},on:{"update:value":function(o){return t.$set(t.formData,"description",o)}}}),t.user.isAdmin&&t.isCreateOrganizationCollection?o("TmfCheckbox",{attrs:{formAttributes:{label:"Create Organization Collection",name:"isPrivate"},value:t.createOrganizationCollection},on:{"update:value":function(o){t.createOrganizationCollection=o}}}):t._e(),t.isUploadFile?o("TmfInput",{staticClass:"flex-grow-1",attrs:{formAttributes:{type:"file",label:"Upload File",name:"file upload",required:!0,accept:".html",acceptType:"text/html",ref:"collectionFileUpload",placeholder:"upload bookmark file"},formErrors:t.formErrors,value:t.uploadedFile},on:{"update:value":function(o){t.uploadedFile=o}}}):t._e()],1)]):t._e()},l=[],a=i("2f62");function n(){return{modal:!1,formData:{},collection:{},componentData:{},isCreateNewCollection:!1,isAddChildCollection:!1,isEditCollection:!1,isUploadFile:!1,formErrors:{},error:{},isButtonLoading:!1,selectedIcon:{},uploadedFile:null,createOrganizationCollection:!1,isCreateOrganizationCollection:!1}}var s={components:{TmfIcons:()=>i.e("chunk-e4a65796").then(i.bind(null,"8e75"))},data:()=>n(),computed:{...Object(a["b"])(["user","collectionCount"]),modalData(){return{title:this.isAddChildCollection?"Add Child Collection":this.isEditCollection?"Edit Collection":"Add Collection",icon:"addFolder"}},isButtonDisable(){var t;return!(null!==(t=this.formData)&&void 0!==t&&t.name&&!this.isUploadFile)&&!this.uploadedFile}},mounted(){this.$bus.$on("open-collection-form",t=>{this.initialize(t)})},methods:{async initialize(t){var o,i;(Object.assign(this.$data,n()),this.modal=!0,this.collection=(null===t||void 0===t?void 0:t.collection)||{},"Collections"==this.$navItems[1].title)?this.componentData={...(null===t||void 0===t?void 0:t.componentData)||(null===(i=this.$navItems[1])||void 0===i||null===(i=i.childs)||void 0===i?void 0:i[2])}:this.componentData={...(null===t||void 0===t?void 0:t.componentData)||(null===(o=this.$navItems[2])||void 0===o||null===(o=o.childs)||void 0===o?void 0:o[2])};this.isCreateOrganizationCollection=!(null===t||void 0===t||!t.createOrganizationCollection),t||(this.isCreateNewCollection=!0),this.isEditCollection=!(null===t||void 0===t||!t.isEditCollection),this.isAddChildCollection=!(null===t||void 0===t||!t.isAddChildCollection),this.isUploadFile=!(null===t||void 0===t||!t.isUploadFile),(this.isAddChildCollection||this.isUploadFile)&&(this.formData.parentID=this.collection.id),null!==t&&void 0!==t&&t.withNewCategory&&(this.formData.name=t.withNewCategory),this.mapObject(this.collection)},mapObject(t){if(!this.isEditCollection||!this.collection)return;let o={value:t.icon},i=t.icon;o.value!==i&&(i=this.$internalIcons.folder),this.selectedIcon={value:i},this.formData={icon:i,name:t.name,description:t.description,isPinned:t.isPinned}},async submit(){var t;this.error={},this.isButtonLoading=!0,this.formData.icon=this.selectedIcon.value,null!==(t=this.collection)&&void 0!==t&&t.isPublic&&(this.formData.isPublic=!0),this.createOrganizationCollection&&("Collections"==this.$navItems[1].title?this.componentData=this.$navItems[1].childs[0]:this.componentData=this.$navItems[2].childs[0]),this.isEditCollection?await this.editCollection():await this.saveCollection()},async saveCollection(){try{var t;this.formData.type=1;let o={...this.formData},i="/category";this.isUploadFile&&null!==this.uploadedFile&&(i="/bookmark/upload-File",o=new FormData,o.append("file",this.uploadedFile),o.append("category",JSON.stringify(this.formData))),this.createOrganizationCollection&&(o.isPublic=!0,o.isPrivate=!1,o.isShared=!1);let e=await this.$axios.post(i,o);this.isAddChildCollection||this.isUploadFile?await this.$collectionHelper.mapCollection({collection:this.collection,componentData:this.componentData,type:"addChildCollection",childCollections:e.data}):this.$collectionHelper.mapCollection({collection:e.data,componentData:this.componentData,type:"addNewCollection"}),this.$bus.$emit("open-toaster",`<div>New collection: <b>${null===(t=e.data)||void 0===t?void 0:t.name},</b></div> <small>has been added successfully.</small>`,"success"),this.modal=!1}catch(o){this.$bus.$emit("open-toaster","Error adding collection","error"),400===o.status&&('"Incorrect File"'==o.response?this.formErrors={file:["Incorrect file format"]}:this.formErrors=JSON.parse(o.response)["errors"]),this.checkforDuplicateCollection(o.status)}finally{this.isButtonLoading=!1,this.isUploadFile=null}},async editCollection(){let t={...this.collection};try{let o=await this.$axios.put("/category/"+t.id,this.formData);t={...(null===o||void 0===o?void 0:o.data)||{}},this.$collectionHelper.mapCollection({collection:t,componentData:this.componentData,type:"update"}),this.modal=!1,this.$bus.$emit("open-toaster",`Collection <strong>${t.name}</strong> is edited successfully`,"success")}catch(o){this.$bus.$emit("open-toaster",`Error editing collection <strong>${t.name}</strong>`,"error")}finally{this.isButtonLoading=!1}},checkforDuplicateCollection(t){409===t&&(this.formErrors={Name:["Duplicate Collection name"]},this.$bus.$emit("open-toaster","Duplicate collection name, try using different name for collection.","error"))},uploadFile(t){"text/html"!==t.target.files[0].type?(this.$refs.fileupload.value=null,this.$bus.$emit("open-toaster","Invalid file format")):t.target.files[0].size<20971520?this.uploadedFile=t.target.files[0]:(this.$refs.fileupload.value=null,this.$bus.$emit("open-toaster","unable to upload file larger than 20MB"))},closeModal(){this.isButtonLoading||(this.modal=!1)}},beforeDestroy(){this.$bus.$off("open-collection-form")}},r=s,c=i("2877"),d=Object(c["a"])(r,e,l,!1,null,null,null);o["default"]=d.exports}}]);