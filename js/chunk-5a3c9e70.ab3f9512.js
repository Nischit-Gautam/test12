(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5a3c9e70"],{b377:function(t,e,i){"use strict";i.r(e);var o=function(){var t=this,e=t._self._c;return e("div",{staticClass:"word-docs-links__link__actions"},[e("button",{staticClass:"btn-control sm sq icon green add--link",on:{click:function(e){return e.stopPropagation(),t.addBookmark.apply(null,arguments)}}},[e("span",{domProps:{innerHTML:t._s(t.$internalIcons.plusBold)}})]),e("button",{directives:[{name:"tmf-tooltip",rawName:"v-tmf-tooltip",value:{content:"View QR Code"},expression:"{\n      content: 'View QR Code'\n    }"}],staticClass:"btn-control sm icon light sq",on:{click:function(e){return t.$bus.$emit("open-qr-modal",t.link.path)}}},[e("span",{domProps:{innerHTML:t._s(t.$internalIcons.qrCode)}})]),e("button",{directives:[{name:"tmf-tooltip",rawName:"v-tmf-tooltip",value:{content:"Copy link"},expression:"{\n      content: 'Copy link'\n    }"}],staticClass:"btn-control sm sq icon light",on:{click:function(e){return e.stopPropagation(),t.copyBookmarkLink(t.link)}}},[e("span",{domProps:{innerHTML:t._s(t.$internalIcons.copy)}})])])},n=[],a=i("2f62"),s=i("e687"),l={mixins:[s["a"]],props:{link:{type:Object,require:!0}},data(){return{linkData:{},formData:{}}},computed:{...Object(a["b"])(["settings","collections","wordDocumentName"]),collectionId(){var t;return null===(t=this.settings)||void 0===t?void 0:t.defaultChromeCategory},isLinkDuplicate(){var t;return!(null===(t=this.linkData)||void 0===t||!t.isDublicate)},isDocumentNameAlreadySetAsCollection(){var t;return null===(t=this.collections)||void 0===t?void 0:t.some(t=>t.name===this.wordDocumentName)}},methods:{async addBookmark(){let t=!1,e={},i={withCategoryName:this.isDocumentNameAlreadySetAsCollection?"":this.wordDocumentName,createCollection:!0,collectionForWord:!0};try{var o;let s=await this.$axios.get("/category/search?query="+this.wordDocumentName);if((null===s||void 0===s||null===(o=s.data)||void 0===o?void 0:o.length)>0){var n;let i=null===s||void 0===s||null===(n=s.data)||void 0===n?void 0:n.filter(t=>null===t.parentID);t=!(null===i||void 0===i||!i.length),e=t?i[0]:{}}var a;if(t)i={withCollectionId:null===(a=e)||void 0===a?void 0:a.id}}finally{this.$bus.$emit("open-bookmark-form",{...this.link,...i})}},async fetchBookmarkData(){try{this.$bus.$emit("open-toaster","Checking for duplicate...","loader");let t=await this.$axios.post("/bookmark/fetch/"+this.collectionId,JSON.stringify(this.link.path));this.linkData={...null===t||void 0===t?void 0:t.data},this.isLinkDuplicate?this.duplicateLinkErrorMessage():(this.mapData(),this.saveLink())}catch(t){this.$bus.$emit("open-toaster","Error adding link","error")}},duplicateLinkErrorMessage(){var t;this.$emit("duplicateLink",null===(t=this.link)||void 0===t?void 0:t.path),this.$bus.$emit("open-toaster","Duplicate link detected","error")},mapData(){var t,e,i,o,n,a,s;this.formData={title:(null===(t=this.path)||void 0===t?void 0:t.title)||(null===(e=this.linkData)||void 0===e?void 0:e.title),path:null===(i=this.linkData)||void 0===i?void 0:i.path,type:this.$helper.checkForEmail(null===(o=this.linkData)||void 0===o?void 0:o.path)?4:1,icon:(null===(n=this.linkData)||void 0===n?void 0:n.icon)||this.$helper.getLinkIcon(null===(a=this.linkData)||void 0===a?void 0:a.path),description:null===(s=this.linkData)||void 0===s?void 0:s.description,categoryID:this.collectionId}},async saveLink(){try{var t,e;this.$bus.$emit("open-toaster","Saving Link...","loader"),await this.$axios.post("/bookmark",this.formData);let i=null===(t=this.collections)||void 0===t?void 0:t.map(({...t})=>(t.id==this.collectionId&&t.bookmarkCount++,t));this.$store.commit("SET_COLLECTION",i),this.$bus.$emit("open-toaster","Link saved successfully","success"),this.$emit("linksaved",null===(e=this.link)||void 0===e?void 0:e.path)}catch(i){409===i.status?this.duplicateLinkErrorMessage():this.$bus.$emit("open-toaster","Error Saving link","error")}}}},r=l,c=i("2877"),d=Object(c["a"])(r,o,n,!1,null,null,null);e["default"]=d.exports},e687:function(t,e,i){"use strict";var o=i("2f62");e["a"]={computed:{...Object(o["b"])(["searchedBookmarks","wordDocumentSelectedRange","selectedCollection","bookmarks"])},methods:{openLinkInNewTab(t,e="current"){if("current"===e)window.open(t.path,"_blank");else if("private"===e){let e=this.$store.getters.extensionId;if(!e)return;window.chrome.windows.create({url:t.path,incognito:!0})}},openEmailInNewTab(t){window.open("mailto:"+t.path)},copyLinkHandler(t){this.$bus.$emit("copy-bookmark",[t.id])},copyBookmarkLink(t){const e=document.createElement("textarea");e.value=t.path,document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e),this.$bus.$emit("open-toaster","Link copied")},viewBookmarkQRCode(t){this.$bus.$emit("open-qr-modal",t.path)},editBookmark(t){this.$bus.$emit("open-bookmark-form",t)},checkForLinkTag(t,e){this.$parent.$refs["link-tag-"+t.id][0].initialize({bookmark:t,index:e,storeInfo:this.componentData})},async trashBookmark(t){this.$bus.$emit("dialog-open",`Do you want to move <b>${t.title}</b> Link to trash?`),this.$bus.$on("dialog-success",e=>{e&&this.trashBookmarkApi(t),this.$bus.$off("dialog-success")})},async trashBookmarkApi(t){var e,i;let o=this,n={...t,isDeleted:!0,Type:1,title:t.title,description:t.description};this.$bus.$emit("open-toaster",`<small>Trashing Link <strong>${t.title}</strong></small>`,"loader");let a={};if(await o.$axios.put("/bookmark/"+t.id,n).then(e=>{a=e,this.$bus.$emit("open-toaster",`<b>Link Trashed</b> <small><strong>${t.title}</strong> link has been added to trash.</small>`,"success")}).catch(()=>{this.$bus.$emit("open-toaster",`<b>Error Trashing</b> <small><strong>${t.title}</strong> failed to trash.</small>`,"error")}),null!==t&&void 0!==t&&t.isSearch){let e=this.searchedBookmarks.filter(({...e})=>e.id!==t.id);this.$store.commit("SET_SEARCHED_BOOKMARKS",e)}else if(null!==t&&void 0!==t&&t.isSearch||+(null===(e=this.$route.params)||void 0===e?void 0:e.collectionId)!==(null===t||void 0===t?void 0:t.categoryID)){if(null!==(i=this.$route.meta)&&void 0!==i&&i.allBookmarks){let e=this.bookmarks.filter(({...e})=>e.id!==t.id);this.$store.commit("SET_BOOKMARKS",e)}}else{let t=this.selectedCollection;t.bookmarkCount-=1,this.$collectionHelper.mapCollection({collection:t,componentData:this.$collectionHelper.getNavItemComponentData(t),type:"update"})}this.$helper.setState("delete",this.componentData.mutation,this.componentData.getter,a.data,null,this.componentData.mutationImage,this.componentData.getterImage),this.$helper.setState("add","SET_TRASHED_BOOKMARKS","trashedBookmarks",a.data,null,this.componentData.mutationImage,this.componentData.getterImage)},async untrashBookmark(t){this.$bus.$emit("dialog-open",`Do you want to untrash ${t.title} Link?`),this.$bus.$on("dialog-success",e=>{e&&this.untrashBookmarkApi(t),this.$bus.$off("dialog-success")})},async untrashBookmarkApi(t){let e={...t,isDeleted:!1,Type:1,title:t.title,description:t.description},i=await this.$axios.put("/bookmark/"+t.id,e);this.$bus.$emit("open-toaster",`<b>${t.title}</b> bookmark moved from trash.`),this.$helper.setState("delete",this.componentData.mutation,this.componentData.getter,i.data,null,this.componentData.mutationImage,this.componentData.getterImage),await this.$store.dispatch("getCollections")},async deleteBookmark(t){this.$bus.$emit("dialog-open",`Do you want to permanently delete <b>${t.title}</b> Link ?`),this.$bus.$on("dialog-success",e=>{e&&this.deleteBookmarkApi(t),this.$bus.$off("dialog-success")})},async deleteBookmarkApi(t){await this.$axios.delete("/bookmark/"+t.id),this.$bus.$emit("open-toaster",`<b>${t.title}</b> bookmark deleted.`),this.$helper.setState("delete",this.componentData.mutation,this.componentData.getter,t,null,this.componentData.mutationImage,this.componentData.getterImage)},insertIntoEmail(t){this.insertBookmarksIntoEmail(t.path)},insertBookmarksIntoEmail(t){let e=window.Office.context.mailbox.item;e.body.getTypeAsync((function(i){i.status==window.Office.AsyncResultStatus.Failed||(i.value==window.Office.MailboxEnums.BodyType.Html?e.body.setSelectedDataAsync(`<a href="${t}">${t}</a>`,{coercionType:window.Office.CoercionType.Html},(function(t){t.status,window.Office.AsyncResultStatus.Failed})):e.body.setSelectedDataAsync(t,{coercionType:window.Office.CoercionType.Text,asyncContext:{var3:1,var4:2}},(function(t){t.status,window.Office.AsyncResultStatus.Failed})))}))},insertIntoWrodDocument(t,e){const i=`<a href="${t.path}" target="_blank">${"hyperlink"===e?this.wordDocumentSelectedRange:t.path}</a>`;let o=this;window.Office.context.document.setSelectedDataAsync(i,{coercionType:"html"},(function(t){t.status,window.Office.AsyncResultStatus.Failed,o.$store.commit("SET_WORD_SELECTED_RANGE","")}))},insertHyperlink(t){let e=this;window.Office.context.mailbox.item.getSelectedDataAsync(window.Office.CoercionType.Text,{},(function(i){var o;let n=null===(o=i.value)||void 0===o?void 0:o.data;n?window.Office.context.mailbox.item.body.setSelectedDataAsync(`<a href="${t.path}" target="_blank">${n}</a>`,{coercionType:window.Office.CoercionType.Html},(function(t){t.status!=window.Office.AsyncResultStatus.Failed&&e.$bus.$emit("open-toaster","Hyperlink added to email.")})):(e.$bus.$emit("dialog-open","Please select a text first to add hyperlink."),e.$bus.$on("dialog-success",()=>{e.$bus.$off("dialog-success")}))}))},insertIntoTeamsChat(t){this.$microsoftTeams.dialog.url.submit({title:t.title,path:t.path})},async pinBookmarkHandler(t){try{this.pinningBookmarkId=t.id;let e={...t,isPinned:!t.isPinned};await this.$axios.put("/bookmark/"+t.id,e).then(()=>{this.$bus.$emit("open-toaster",`<b>Link ${t.isPinned?"unpinned":"pinned"} </b><small>Link <strong>${t.title}</strong> has been ${t.isPinned?"unpinned":"pinned"} successfully</small>`,"success")}).catch(()=>{this.$bus.$emit("open-toaster",`<b>Error ${t.isPinned?"unpinning":"pinning"} </b><small>Error  ${t.isPinned?"unpinning":"pinning"} <strong>${t.title}</strong> link.</small>`,"error")}),t.isPinned=!t.isPinned;let i=this.componentData.mutation,o=this.componentData.getter;Object.keys(this.$route.meta).includes("allBookmarks")&&(i="SET_BOOKMARKS",o="bookmarks"),this.$helper.setState("edit",i,o,t,null,this.componentData.mutationImage,this.componentData.getterImage)}finally{this.pinningBookmarkId=null}}}}}}]);